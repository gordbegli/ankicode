def test_isSubtree():
    # Test case 1
    root = TreeNode(3, TreeNode(4, TreeNode(1), TreeNode(2)), TreeNode(5))
    subRoot = TreeNode(4, TreeNode(1), TreeNode(2))
    result = isSubtree(root, subRoot)
    assert result == True, "Test case 1 failed"

    # Test case 2
    root = TreeNode(3, TreeNode(4, TreeNode(1), TreeNode(2, None, TreeNode(0))), TreeNode(5))
    subRoot = TreeNode(4, TreeNode(1), TreeNode(2))
    result = isSubtree(root, subRoot)
    assert result == False, "Test case 2 failed"

    # Test case 3: subRoot is the same as root
    root = TreeNode(1, TreeNode(2), TreeNode(3))
    subRoot = root
    result = isSubtree(root, subRoot)
    assert result == True, "Test case 3 failed"

    # Test case 4: subRoot is deeply nested in root
    root = TreeNode(1, TreeNode(2, TreeNode(4)), TreeNode(3, TreeNode(4, TreeNode(5), TreeNode(6)), TreeNode(7)))
    subRoot = TreeNode(4, TreeNode(5), TreeNode(6))
    result = isSubtree(root, subRoot)
    assert result == True, "Test case 4 failed"
    
    print("All test cases pass.")

test_isSubtree()
