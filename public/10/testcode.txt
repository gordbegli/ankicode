def test_isValidBST():
    solution = Solution()

    # Test case 1: Valid BST
    root = TreeNode(2, TreeNode(1), TreeNode(3))
    result = solution.isValidBST(root)
    print("Test case 1 (Valid BST):", result)
    assert result == True, "Test case 1 failed"

    # Test case 2: Invalid BST
    root = TreeNode(5, TreeNode(1), TreeNode(4, TreeNode(3), TreeNode(6)))
    result = solution.isValidBST(root)
    print("Test case 2 (Invalid BST):", result)
    assert result == False, "Test case 2 failed"

    # Test case 3: Simple right-skewed tree (Valid BST)
    root = TreeNode(1, right=TreeNode(2, right=TreeNode(3)))
    result = solution.isValidBST(root)
    print("Test case 3 (Right-skewed tree):", result)
    assert result == True, "Test case 3 failed"

    # Test case 4: Simple left-skewed tree (Valid BST)
    root = TreeNode(3, left=TreeNode(2, left=TreeNode(1)))
    result = solution.isValidBST(root)
    print("Test case 4 (Left-skewed tree):", result)
    assert result == True, "Test case 4 failed"

    # Test case 5: Node with None child (Valid BST)
    root = TreeNode(2, None, TreeNode(3))
    result = solution.isValidBST(root)
    print("Test case 5 (Root with one None child):", result)
    assert result == True, "Test case 5 failed"

    print("All test cases passed!")

test_isValidBST()