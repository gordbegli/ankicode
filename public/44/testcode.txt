def print_linked_list(head: ListNode):
    while head:
        print(head.val, end=" " if head.next else "\n")
        head = head.next


def test_addTwoNumbers():
    # Test case 1: Example with carryover
    l1 = ListNode(2, ListNode(4, ListNode(3)))
    l2 = ListNode(5, ListNode(6, ListNode(4)))
    result = Solution().addTwoNumbers(l1, l2)
    print("Test case 1:")
    print("Input: l1 = [2,4,3], l2 = [5,6,4]")
    print("Expected Output: [7,0,8]")
    print("Actual Output: ", end="")
    print_linked_list(result)
    print()

    # Test case 2: Single digit numbers, no carryover
    l1 = ListNode(0)
    l2 = ListNode(0)
    result = Solution().addTwoNumbers(l1, l2)
    print("Test case 2:")
    print("Input: l1 = [0], l2 = [0]")
    print("Expected Output: [0]")
    print("Actual Output: ", end="")
    print_linked_list(result)
    print()

    # Test case 3: Multiple digits with carryover
    l1 = ListNode(9, ListNode(9, ListNode(9, ListNode(9, ListNode(9, ListNode(9, ListNode(9)))))))
    l2 = ListNode(9, ListNode(9, ListNode(9, ListNode(9))))
    result = Solution().addTwoNumbers(l1, l2)
    print("Test case 3:")
    print("Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]")
    print("Expected Output: [8,9,9,9,0,0,0,1]")
    print("Actual Output: ", end="")
    print_linked_list(result)
    print()

    # Test case 4: Different lengths without carryover
    l1 = ListNode(1, ListNode(2, ListNode(3)))
    l2 = ListNode(1)
    result = Solution().addTwoNumbers(l1, l2)
    print("Test case 4:")
    print("Input: l1 = [1,2,3], l2 = [1]")
    print("Expected Output: [2,2,3]")
    print("Actual Output: ", end="")
    print_linked_list(result)
    print()

# Run the tests
test_addTwoNumbers()
