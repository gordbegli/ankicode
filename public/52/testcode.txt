sol = Solution()

# Test case 1
nums = [1, 1, 1, 1, 1]
target = 3
result = sol.findTargetSumWays(nums, target)
print(f"Test case 1: nums = {nums}, target = {target}")
print(f"Output: {result}")
assert result == 5, f"Failed: expected 5, got {result}"

# Test case 2
nums = [1]
target = 1
result = sol.findTargetSumWays(nums, target)
print(f"Test case 2: nums = {nums}, target = {target}")
print(f"Output: {result}")
assert result == 1, f"Failed: expected 1, got {result}"

# Test case 3: Edge case: Max values
nums = [1000] * 20
target = 20000
result = sol.findTargetSumWays(nums, target)
print(f"Test case 3: nums = {nums}, target = {target}")
print(f"Output: {result}")
assert result == 1, f"Failed: expected 1, got {result}"

# Adding more robust test cases
nums = [1, 2, 1]
target = 0
result = sol.findTargetSumWays(nums, target)
print(f"Test case 4: nums = {nums}, target = {target}")
print(f"Output: {result}")
assert result == 2, f"Failed: expected 2, got {result}"

nums = [2, 1, 3]
target = 2
result = sol.findTargetSumWays(nums, target)
print(f"Test case 5: nums = {nums}, target = {target}")
print(f"Output: {result}")
assert result == 1, f"Failed: expected 1, got {result}"

print("All test cases complete")