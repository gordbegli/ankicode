def test_buildTree():
    sol = Solution()

    # Test case 1
    preorder = [3,9,20,15,7]
    inorder = [9,3,15,20,7]
    print("Test case 1 (Example 1):")
    root = sol.buildTree(preorder, inorder)
    # Function to print tree in level order for easier verification
    def print_tree(node):
        if not node:
            return "null"
        queue = [node]
        result = []
        while queue:
            current = queue.pop(0)
            if current:
                result.append(str(current.val))
                queue.append(current.left)
                queue.append(current.right)
            else:
                result.append("null")
        # Remove trailing nulls
        while result and result[-1] == "null":
            result.pop()
        return ','.join(result)
    print(f"Output: {print_tree(root)}")

    # Test case 2
    preorder = [-1]
    inorder = [-1]
    print("Test case 2 (Example 2):")
    root = sol.buildTree(preorder, inorder)
    print(f"Output: {print_tree(root)}")

    # Additional Test case 3
    preorder = [1,2,3]
    inorder = [2,1,3]
    print("Test case 3:")
    root = sol.buildTree(preorder, inorder)
    print(f"Output: {print_tree(root)}")

    # Additional Test case 4
    preorder = [1,2,3]
    inorder = [3,2,1]
    print("Test case 4:")
    root = sol.buildTree(preorder, inorder)
    print(f"Output: {print_tree(root)}")

    print("All test cases complete!")

test_buildTree()