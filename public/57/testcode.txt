def test_permute():
    # Test case 1
    nums = [1, 2, 3]
    result = permute(nums)
    print('Test case 1 (nums = [1, 2, 3]):')
    print(f'Input: {nums}')
    print(f'Output: {result}')
    expected = [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]]
    assert sorted(result) == sorted(expected), f'Expected {expected}, but got {result}'
    print()

    # Test case 2
    nums = [0, 1]
    result = permute(nums)
    print('Test case 2 (nums = [0, 1]):')
    print(f'Input: {nums}')
    print(f'Output: {result}')
    expected = [[0, 1], [1, 0]]
    assert sorted(result) == sorted(expected), f'Expected {expected}, but got {result}'
    print()

    # Test case 3
    nums = [1]
    result = permute(nums)
    print('Test case 3 (nums = [1]):')
    print(f'Input: {nums}')
    print(f'Output: {result}')
    expected = [[1]]
    assert result == expected, f'Expected {expected}, but got {result}'
    print()

    # Additional test case 4
    nums = [1, 2]
    result = permute(nums)
    print('Test case 4 (nums = [1, 2]):')
    print(f'Input: {nums}')
    print(f'Output: {result}')
    expected = [[1, 2], [2, 1]]
    assert sorted(result) == sorted(expected), f'Expected {expected}, but got {result}'
    print()

    print('All test cases complete')

# Run the tests
test_permute()